- hosts: all
  gather_facts: false

  tasks:
    - name: Define files to check
      set_fact:
        file_list:
          - /opt/myapp/app.conf
          - /opt/myapp/db.conf
          - /opt/myapp/logging.conf

    - name: Stat each file in the list
      ansible.builtin.stat:
        path: "{{ item }}"
      loop: "{{ file_list }}"
      loop_control:
        loop_var: file_path
      register: file_stats

    - name: Report existing files
      debug:
        msg: "Present: {{ item.file_path }}"
      loop: "{{ file_stats.results }}"
      when: item.stat.exists and (item.stat.isreg | default(false))

    - name: Copy missing files from templates
      ansible.builtin.copy:
        src: "templates/{{ item.file_path | basename }}"
        dest: "{{ item.file_path }}"
        mode: '0644'
      loop: "{{ file_stats.results }}"
      when: not item.stat.exists


#########################
- name: Build profile_map incrementally with custom loop_var
  hosts: all
  gather_facts: false
  vars:
    profile_cmd: /path/to/your/profile-list-script.sh

  tasks:
    - name: Run profile-to-hostname command
      ansible.builtin.command: "{{ profile_cmd }}"
      register: profile_out

    - name: Filter out the header line
      ansible.builtin.set_fact:
        filtered_lines: "{{ profile_out.stdout_lines[1:] }}"

    - name: Initialize empty profile_map
      ansible.builtin.set_fact:
        profile_map: {}

    - name: Add each profileâ†’hostname to profile_map
      ansible.builtin.set_fact:
        profile_map: "{{ profile_map | default({}) | combine({ (key): (value) }) }}"
      loop: "{{ filtered_lines }}"
      loop_control:
        loop_var: profile_line
      vars:
        key:   "{{ profile_line.split(': ')[0] }}"
        value: "{{ profile_line.split(': ')[1] }}"

