# getAppServerSecurePorts.py
# Usage: wsadmin.sh -lang jython -f getAppServerSecurePorts.py

import re

# 1) Build a map of nodeName -> hostName
nodeMap = {}
for node in AdminConfig.list('Node').splitlines():
    name = AdminConfig.showAttribute(node, 'name')
    host = AdminConfig.showAttribute(node, 'hostName')
    nodeMap[name] = host

# Header
print '%-30s %-20s %-20s %s' % ('ServerName', 'NodeName', 'HostName', 'SecurePort')
print '-' * 85

# 2) Iterate through all ServerEntry configs
for se in AdminConfig.list('ServerEntry').splitlines():
    # Extract nodeName and serverName from the config ID
    m = re.search(r'nodes/([^/]+)/servers/([^|]+)', se)
    if not m:
        continue
    nodeName, serverName = m.group(1), m.group(2)

    # 3) Filter only application servers
    serverId = AdminConfig.getid('/Node:%s/Server:%s/' % (nodeName, serverName))
    if not serverId or AdminConfig.showAttribute(serverId, 'serverType') != 'APPLICATION_SERVER':
        continue

    # 4) Find the WC_defaulthost_secure endpoint and its port
    securePort = 'NOT_DEFINED'
    for nep in AdminConfig.list('NamedEndPoint', se).splitlines():
        if AdminConfig.showAttribute(nep, 'endPointName') == 'WC_defaulthost_secure':
            epId = AdminConfig.showAttribute(nep, 'endPoint')
            securePort = AdminConfig.showAttribute(epId, 'port')
            break

    # 5) Print the results
    hostName = nodeMap.get(nodeName, 'UNKNOWN')
    print '%-30s %-20s %-20s %s' % (serverName, nodeName, hostName, securePort)
