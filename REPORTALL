Below is the revised Ansible task. In this version, the loop iterates over only the hosts targeted in the play (using the play_hosts variable) instead of all hosts in the inventory.

yaml
Copy
- name: "Generate Comprehensive Upgrade & iFix Installation Report (HTML)"
  set_fact:
    combined_report_html: |
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>Comprehensive Upgrade & iFix Installation Report</title>
        <style>
          body {font-family: Arial, sans-serif; color: #333; font-size: 14px; margin: 0; padding: 20px;}
          h1, h2, h3 {color: #2E6DA4;}
          table {border-collapse: collapse; width: 100%; margin-top: 10px;}
          th, td {border: 1px solid #ccc; padding: 8px; text-align: left;}
          th {background-color: #f2f2f2;}
          hr {margin: 20px 0;}
        </style>
      </head>
      <body>
        <h1>Comprehensive Upgrade & iFix Installation Report</h1>
        <p><strong>Generated On:</strong> {{ ansible_date_time.iso8601 }}</p>
        <hr>
        
        <h2>Upgrade Report</h2>
        {% for host in play_hosts %}
          <h3>Host: {{ host }}</h3>
          {% set baw_upgraded = (hostvars[host].baw_installed and (hostvars[host].current_baw_version != hostvars[host].target_baw_version)) %}
          {% set websphere_upgraded = (hostvars[host].websphere_installed and (hostvars[host].current_websphere_version != hostvars[host].target_websphere_version)) %}
          {% set ihttpd_upgraded = (hostvars[host].ihttpd_installed and (hostvars[host].current_ihttpd_version != hostvars[host].target_ihttpd_version)) %}
          {% set plugin_upgraded = (hostvars[host].plugin_installed and (hostvars[host].current_plugin_version != hostvars[host].target_plugin_version)) %}
          
          {% if baw_upgraded or websphere_upgraded or ihttpd_upgraded or plugin_upgraded %}
          <table border="1" cellpadding="5" cellspacing="0">
            <tr>
              <th>Product</th>
              <th>Before Version</th>
              <th>After Version</th>
              <th>Installation Path</th>
            </tr>
            {% if baw_upgraded %}
            <tr>
              <td>IBM BAW</td>
              <td>{{ hostvars[host].current_baw_version }}</td>
              <td>{{ hostvars[host].target_baw_version }}</td>
              <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/baw_install</td>
            </tr>
            {% endif %}
            {% if websphere_upgraded %}
            <tr>
              <td>IBM Websphere</td>
              <td>{{ hostvars[host].current_websphere_version }}</td>
              <td>{{ hostvars[host].target_websphere_version }}</td>
              <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/websphere_install</td>
            </tr>
            {% endif %}
            {% if ihttpd_upgraded %}
            <tr>
              <td>IBM HTTP Server</td>
              <td>{{ hostvars[host].current_ihttpd_version }}</td>
              <td>{{ hostvars[host].target_ihttpd_version }}</td>
              <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/ihttpd_install</td>
            </tr>
            {% endif %}
            {% if plugin_upgraded %}
            <tr>
              <td>Web Server Plug-ins</td>
              <td>{{ hostvars[host].current_plugin_version }}</td>
              <td>{{ hostvars[host].target_plugin_version }}</td>
              <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/plugin_install</td>
            </tr>
            {% endif %}
          </table>
          {% else %}
          <p><em>No products were upgraded on this host.</em></p>
          {% endif %}
          <hr>
        {% endfor %}
        
        <h2>WebSphere iFix Installation Report</h2>
        {% if install_ifixes %}
          <p><strong>Generated on:</strong> {{ ansible_date_time.date }} {{ ansible_date_time.time }}</p>
          {% if installed_ifixes_this_run | length > 0 %}
            <p>The following WebSphere iFixes were successfully installed during this run:</p>
            <table>
              <tr>
                <th>iFix Name</th>
              </tr>
              {% for ifix in installed_ifixes_this_run %}
              <tr>
                <td>{{ ifix }}</td>
              </tr>
              {% endfor %}
            </table>
            <p><strong>Total Installed This Run:</strong> {{ installed_ifixes_this_run | length }}</p>
          {% else %}
            <p style="color:green;"><strong>No new WebSphere iFixes were installed during this run.</strong></p>
          {% endif %}
        {% else %}
          <p><em>iFix installation was not enabled during this run.</em></p>
        {% endif %}
      </body>
      </html>
  when: install_ifixes or true  # Adjust condition as needed; upgrade section always runs
Explanation
Looping Through Targeted Hosts:
Instead of iterating over all hosts with groups['all'], the loop now uses play_hosts, which contains only the hosts targeted by the current play.

Report Sections:
The Upgrade Report section iterates over each targeted host, checks upgrade conditions, and displays relevant information. The iFix Installation Report section remains unchanged, displaying details based on the variable install_ifixes.

This updated task will generate a comprehensive report for only those hosts included in the current execution, ensuring that the report is relevant to your play.






You said:
seperate the ifix installation report and upgrade report and call them in one task to send mail 
ChatGPT said:
Reasoned for 10 seconds
Below is an example playbook snippet that first sets two separate HTML reports—one for the upgrade report and one for the WebSphere iFix installation report—and then combines them in a single email using the mail module.

yaml
Copy
- hosts: your_target_hosts
  gather_facts: yes
  vars:
    smtp_host: "smtp.example.com"
    smtp_port: 25
    mail_recipient: "recipient@example.com"
    mail_sender: "sender@example.com"
  tasks:
    - name: "Generate Upgrade Report HTML"
      set_fact:
        upgrade_report_html: |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Upgrade Report</title>
            <style>
              body {font-family: Arial, sans-serif; color: #333; font-size: 14px; margin: 0; padding: 20px;}
              h1, h2, h3 {color: #2E6DA4;}
              table {border-collapse: collapse; width: 100%; margin-top: 10px;}
              th, td {border: 1px solid #ccc; padding: 8px; text-align: left;}
              th {background-color: #f2f2f2;}
              hr {margin: 20px 0;}
            </style>
          </head>
          <body>
            <h1>Upgrade Report</h1>
            <p><strong>Generated On:</strong> {{ ansible_date_time.iso8601 }}</p>
            {% for host in play_hosts %}
              <h2>Host: {{ host }}</h2>
              {% set baw_upgraded = (hostvars[host].baw_installed and (hostvars[host].current_baw_version != hostvars[host].target_baw_version)) %}
              {% set websphere_upgraded = (hostvars[host].websphere_installed and (hostvars[host].current_websphere_version != hostvars[host].target_websphere_version)) %}
              {% set ihttpd_upgraded = (hostvars[host].ihttpd_installed and (hostvars[host].current_ihttpd_version != hostvars[host].target_ihttpd_version)) %}
              {% set plugin_upgraded = (hostvars[host].plugin_installed and (hostvars[host].current_plugin_version != hostvars[host].target_plugin_version)) %}
              {% if baw_upgraded or websphere_upgraded or ihttpd_upgraded or plugin_upgraded %}
                <table border="1" cellpadding="5" cellspacing="0">
                  <tr>
                    <th>Product</th>
                    <th>Before Version</th>
                    <th>After Version</th>
                    <th>Installation Path</th>
                  </tr>
                  {% if baw_upgraded %}
                  <tr>
                    <td>IBM BAW</td>
                    <td>{{ hostvars[host].current_baw_version }}</td>
                    <td>{{ hostvars[host].target_baw_version }}</td>
                    <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/baw_install</td>
                  </tr>
                  {% endif %}
                  {% if websphere_upgraded %}
                  <tr>
                    <td>IBM Websphere</td>
                    <td>{{ hostvars[host].current_websphere_version }}</td>
                    <td>{{ hostvars[host].target_websphere_version }}</td>
                    <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/websphere_install</td>
                  </tr>
                  {% endif %}
                  {% if ihttpd_upgraded %}
                  <tr>
                    <td>IBM HTTP Server</td>
                    <td>{{ hostvars[host].current_ihttpd_version }}</td>
                    <td>{{ hostvars[host].target_ihttpd_version }}</td>
                    <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/ihttpd_install</td>
                  </tr>
                  {% endif %}
                  {% if plugin_upgraded %}
                  <tr>
                    <td>Web Server Plug-ins</td>
                    <td>{{ hostvars[host].current_plugin_version }}</td>
                    <td>{{ hostvars[host].target_plugin_version }}</td>
                    <td>/home/{{ hostvars[host].baw_user | default('bawadm') }}/plugin_install</td>
                  </tr>
                  {% endif %}
                </table>
              {% else %}
                <p><em>No products were upgraded on this host.</em></p>
              {% endif %}
              <hr>
            {% endfor %}
          </body>
          </html>

    - name: "Generate WebSphere iFix Installation Report HTML"
      set_fact:
        ifix_report_html: |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>WebSphere iFix Installation Report</title>
            <style>
              body {font-family: Arial, sans-serif; color: #333; font-size: 14px; margin: 0; padding: 20px;}
              h1 {color: #2E6DA4;}
              table {border-collapse: collapse; width: 100%; margin-top: 10px;}
              th, td {border: 1px solid #ccc; padding: 8px; text-align: left;}
              th {background-color: #f2f2f2;}
            </style>
          </head>
          <body>
            <h1>WebSphere iFix Installation Report</h1>
            <p><strong>Generated on:</strong> {{ ansible_date_time.date }} {{ ansible_date_time.time }}</p>
            {% if install_ifixes %}
              {% if installed_ifixes_this_run | length > 0 %}
                <p>The following WebSphere iFixes were successfully installed during this run:</p>
                <table>
                  <tr>
                    <th>iFix Name</th>
                  </tr>
                  {% for ifix in installed_ifixes_this_run %}
                  <tr>
                    <td>{{ ifix }}</td>
                  </tr>
                  {% endfor %}
                </table>
                <p><strong>Total Installed This Run:</strong> {{ installed_ifixes_this_run | length }}</p>
              {% else %}
                <p style="color:green;"><strong>No new WebSphere iFixes were installed during this run.</strong></p>
              {% endif %}
            {% else %}
              <p><em>iFix installation was not enabled during this run.</em></p>
            {% endif %}
          </body>
          </html>

    - name: "Send Comprehensive Report via Email"
      mail:
        host: "{{ smtp_host }}"
        port: "{{ smtp_port }}"
        subject: "Comprehensive Upgrade & iFix Installation Report"
        to: "{{ mail_recipient }}"
        from: "{{ mail_sender }}"
        body: "{{ upgrade_report_html }}<br><br>{{ ifix_report_html }}"
        subtype: html
How This Works
Separate Report Generation:

The first task generates the Upgrade Report as HTML, looping only through the targeted hosts (play_hosts).
The second task generates the WebSphere iFix Installation Report as HTML based on whether the install_ifixes flag is enabled and whether any iFixes were installed.
Combined Email Task:
The final task uses the Ansible mail module to send an email. The email body is a concatenation of the two HTML reports. The <br><br> ensures spacing between the two sections. The subtype: html setting ensures that the email client (such as Outlook) renders the content as HTML.

Adjust the SMTP host, port, sender, recipient, and any report variables as necessary for your environment.
