# getSecurePorts_fixed.py
# wsadmin Jython (Python 2.7) script to list WC_defaulthost_secure ports with real hostnames
# Usage:
#   wsadmin.sh -lang jython \
#     -conntype SOAP -host <dmgrHost> -port <dmgrPort> \
#     -f getSecurePorts_fixed.py

import java

# Java line separator for splitting list() results
sep = java.lang.System.getProperty('line.separator')

# 1. Retrieve the cell name
cells = AdminConfig.list('Cell').splitlines()
if cells:
    cellId = cells[0]
    cellName = AdminConfig.showAttribute(cellId, 'name')
else:
    cellName = 'UNKNOWN'

# 2. Iterate each ServerEntry (includes app servers + dmgr)
for srvEntry in AdminConfig.list('ServerEntry').splitlines():
    # Extract serverName
    srvName = srvEntry.split('(', 1)[0]

    # 3. Extract nodeName by parsing the config path
    try:
        nodeName = srvEntry.split('/nodes/')[1].split('/')[0]
    except IndexError:
        # Unexpected formatâ€”skip
        continue

    # 4. Lookup the Node to get its real hostName
    nodeId = AdminConfig.getid('/Node:%s/' % nodeName)
    if nodeId:
        hostName = AdminConfig.showAttribute(nodeId, 'hostName')
    else:
        hostName = 'UNKNOWN'

    # 5. Find the WC_defaulthost_secure endpoint under this ServerEntry
    for nep in AdminConfig.list('NamedEndPoint', srvEntry).split(sep):
        if not nep.strip():
            continue
        if AdminConfig.showAttribute(nep, 'endPointName') == 'WC_defaulthost_secure':
            # Get nested EndPoint to retrieve port
            epRef = AdminConfig.showAttribute(nep, 'endPoint')
            if epRef:
                port = AdminConfig.showAttribute(epRef, 'port')
            else:
                port = 'UNKNOWN'
            # Output: cellName nodeName serverName hostName port
            print "%s %s %s %s %s" % (
                cellName, nodeName, srvName, hostName, port)
            break
