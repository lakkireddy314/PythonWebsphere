---
- name: "Initialize cert_configs list"
  set_fact:
    cert_configs: []
  tags:
    - extract
    - config-parse

- name: "Read and parse HTTPD configs on remote hosts"
  vars:
    # Decode the raw slurp content into a string
    content: "{{ slurp_result.content | b64decode }}"
    # Find all Keyfile paths (nonâ€‘commented)
    keyfiles: >
      {{ content 
         | regex_findall('(?m)^[ \\t]*Keyfile[ \\t]*=[ \\t]*(\\S+)') }}
    # Find all SSLServerCert values
    ssl_aliases: >
      {{ content 
         | regex_findall('(?m)^[ \\t]*SSLServerCert[ \\t]*=[ \\t]*(\\S+)') }}
    # Find first Listen port (default to 443 if none)
    listen_ports: >
      {{ content 
         | regex_findall('(?m)^[ \\t]*Listen[ \\t]+(?:[\\w\\.]+:)?(\\d+)') }}
  block:
    - name: "Fetch {{ conf_entry.key }} from remote"
      slurp:
        src: "{{ conf_entry.key }}"
      register: slurp_result
      ignore_errors: true
      tags:
        - extract
        - config-parse

    - name: "Skip parse if {{ conf_entry.key }} missing"
      debug:
        msg: "{{ conf_entry.key }} not found, skipping."
      when: slurp_result is failed
      tags:
        - extract
        - config-parse

    - name: "Append parsed entries to cert_configs"
      set_fact:
        cert_configs: >-
          {{
            cert_configs
            + [
                {
                  'config_file': conf_entry.key,
                  'kdb_file':    kdb,
                  'cert_alias':  conf_entry.value,
                  'listen_port': (listen_ports[0] if listen_ports else '443')
                }
                for kdb in keyfiles|default([])
              ]
          }}
      when:
        - slurp_result is succeeded
        - keyfiles | length > 0
      tags:
        - extract
        - config-parse

  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: conf_entry
    label: "{{ conf_entry.key }}"
  tags:
    - extract
    - config-parse

- name: "Debug final cert_configs"
  debug:
    var: cert_configs
  tags:
    - extract
    - config-parse
