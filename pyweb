# listHostnamesComplete.py
# wsadmin Jython script to print <name>: <hostName> for
# DMGR, Node Agents, and WebSphere Web Servers

# Helper to drop a trailing ')' from wsadmin output entries
def strip_trailing_paren(s):
    if s.endswith(')'):
        return s[:-1]
    return s

# Function to process Deployment Manager and Node Agent entries
def printNodeHostMappings(entries):
    for entry in entries:
        # entry example: "dmgr(cells/myCell/nodes/mgrNode/servers/dmgr|server.xml)"
        cfgPath  = strip_trailing_paren(entry.split('(', 1)[1])
        nodePath = cfgPath.split('|', 1)[0]               # "cells/<cell>/nodes/<node>/servers/<profile>"
        parts    = nodePath.split('/')
        cellName = parts[1]
        nodeName = parts[3]
        nodeId   = AdminConfig.getid('/Cell:%s/Node:%s/' % (cellName, nodeName))
        hostName = AdminConfig.showAttribute(nodeId, 'hostName')
        print '%s: %s' % (nodeName, hostName)

# --- Main Execution ---

# 1. Deployment Manager (DMGR)
dmgrEntries      = AdminTask.listServers('[-serverType DEPLOYMENT_MANAGER]').splitlines()  # Lists DMGR profiles :contentReference[oaicite:3]{index=3}
printNodeHostMappings(dmgrEntries)

# 2. Node Agents
nodeAgentEntries = AdminTask.listServers('[-serverType NODE_AGENT]').splitlines()           # Lists Node Agents :contentReference[oaicite:4]{index=4}
printNodeHostMappings(nodeAgentEntries)

# 3. Web Servers (directly list WebServer config objects)
webServerIds = AdminConfig.list('WebServer').splitlines()                                   # List WebServer objects :contentReference[oaicite:5]{index=5}
for wsId in webServerIds:
    # Attempt to read the initialized 'name' attribute
    nameAttr = AdminConfig.showAttribute(wsId, 'name')
    if nameAttr:
        serverName = nameAttr
    else:
        # Fallback: parse name from the config path in wsId
        serverName = wsId.split('|', 1)[0].split('/')[-1]
    # Read the hostName attribute directly from the WebServer object
    hostName = AdminConfig.showAttribute(wsId, 'hostName')                                 # hostName valid on WebServer :contentReference[oaicite:6]{index=6}
    print '%s: %s' % (serverName, hostName)
