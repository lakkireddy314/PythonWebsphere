---
- name: "Initialize expiry tracking"
  set_fact:
    cert_days_remaining_per_alias: {}
    local_cert_info: {}
  tags:
    - precheck
    - expiry-check

- name: "Check expiry and serial for each cert alias"
  block:
    - name: "Fetch expiry date for alias {{ alias_entry.value }}"
      shell: >
        openssl x509 -enddate -noout
          -in {{ vcert_install_dir }}/{{ alias_entry.value }}.pem
        | cut -d= -f2
      register: expiry_result
      changed_when: false

    - name: "Fetch serial number for alias {{ alias_entry.value }}"
      shell: >
        openssl x509 -in {{ vcert_install_dir }}/{{ alias_entry.value }}.pem
          -serial -noout
        | cut -d= -f2
      register: serial_result
      changed_when: false

    - name: "Parse expiry timestamp for alias {{ alias_entry.value }}"
      set_fact:
        expiry_ts: "{{ expiry_result.stdout | to_datetime('%b %d %H:%M:%S %Y %Z') }}"

    - name: "Compute days until expiry for alias {{ alias_entry.value }}"
      set_fact:
        days_rem: >-
          {{
            (
              expiry_ts.timestamp()
              - (ansible_date_time.iso8601 | to_datetime).timestamp()
            ) / 86400
            | round(0, 'floor')
            | int
          }}

    - name: "Record days remaining for alias {{ alias_entry.value }}"
      set_fact:
        cert_days_remaining_per_alias: >-
          {{ cert_days_remaining_per_alias
             | combine({ alias_entry.value: days_rem }) }}

    - name: "Record full cert info for alias {{ alias_entry.value }}"
      set_fact:
        local_cert_info: >-
          {{ local_cert_info
             | combine({ alias_entry.value: {
                  serial:      serial_result.stdout,
                  expiry_days: days_rem,
                  changed:     days_rem <= cert_renew_threshold
               } }) }}

    - name: "DEBUG: Summary for alias {{ alias_entry.value }}"
      debug:
        msg: >
          Alias {{ alias_entry.value }}:
            expiry_days={{ days_rem }},
            serial={{ serial_result.stdout }},
            needs_renewal={{ days_rem <= cert_renew_threshold }}
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: alias_entry
    label: "{{ alias_entry.key }}"
  delegate_to: localhost
  tags:
    - precheck
    - expiry-check
