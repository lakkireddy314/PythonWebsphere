---
- name: "Initialize cert expiry result dictionary"
  set_fact:
    cert_days_remaining_per_alias: {}
    local_cert_info: {}
  tags:
    - precheck
    - expiry-check

- name: "Check cert expiry date for each alias"
  shell: |
    openssl x509 -enddate -noout -in {{ vcert_install_dir }}/{{ pickup_entry.value }}.pem | cut -d= -f2
  register: cert_expiry_raw
  changed_when: false
  delegate_to: localhost
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: pickup_entry
    label: "{{ pickup_entry.key }}"
  tags:
    - precheck
    - expiry-check

- name: "Check cert serial number for each alias"
  shell: |
    openssl x509 -in {{ vcert_install_dir }}/{{ pickup_entry.value }}.pem -serial -noout | cut -d= -f2
  register: cert_serial_raw
  changed_when: false
  delegate_to: localhost
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: pickup_entry
    label: "{{ pickup_entry.key }}"
  tags:
    - precheck
    - expiry-check

- name: "Compute days until expiry for each alias"
  set_fact:
    cert_days_remaining_per_alias: >-
      {{
        cert_days_remaining_per_alias | combine({
          pickup_entry.value: (
            (
              cert_expiry_raw.results[ansible_loop.index0].stdout
              | to_datetime('%b %d %H:%M:%S %Y %Z')
            ).timestamp()
            -
            (ansible_date_time.iso8601 | to_datetime).timestamp()
          ) / 86400 | round(0, 'floor') | int
        })
      }}
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: pickup_entry
  tags:
    - precheck
    - expiry-check

- name: "Set local_cert_info per alias"
  set_fact:
    local_cert_info: >-
      {{
        local_cert_info | combine({
          pickup_entry.value: {
            "serial": cert_serial_raw.results[ansible_loop.index0].stdout,
            "expiry_days": cert_days_remaining_per_alias[pickup_entry.value],
            "changed": cert_days_remaining_per_alias[pickup_entry.value] <= cert_renew_threshold
          }
        })
      }}
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: pickup_entry
  tags:
    - precheck
    - expiry-check

- name: "DEBUG summary per cert alias"
  debug:
    msg: >-
      Alias {{ pickup_entry.value }} expires in {{ cert_days_remaining_per_alias[pickup_entry.value] }} days.
      Serial: {{ local_cert_info[pickup_entry.value].serial }}.
      Renewal needed: {{ local_cert_info[pickup_entry.value].changed }}
  loop: "{{ httpd_pickup_ids | dict2items }}"
  loop_control:
    loop_var: pickup_entry
  tags:
    - precheck
    - expiry-check
